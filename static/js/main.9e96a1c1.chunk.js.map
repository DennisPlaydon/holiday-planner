{"version":3,"sources":["components/Titles.js","components/CountryInput.js","components/HolidayButton.js","components/Holiday.js","App.js","serviceWorker.js","index.js"],"names":["Titles","react_default","a","createElement","className","CountryInput","props","onSubmit","getHolidays","type","name","placeholder","HolidayButton","onClick","Holiday","holidayName","holidayDescription","date","daysUntil","Fragment","Math","ceil","components_HolidayButton","getNextHoliday","error","API_KEY","process","App","state","holidays","undefined","_callee","e","country","api_call","data","regenerator_default","wrap","_context","prev","next","preventDefault","console","log","target","elements","value","fetch","concat","sent","json","response","length","_this","setState","Date","stop","this","todaysDate","i","nextHoliday","holidayDate","iso","abs","description","components_Titles","components_CountryInput","components_Holiday","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e96a1c1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Titles = () => (\r\n  <div>\r\n    <h1 className=\"title-container__title\">Holiday Finder</h1>\r\n    <h3 className=\"title-container__subtitle\">\r\n      Find out when your next holiday is\r\n    </h3>\r\n  </div>\r\n);\r\n\r\nexport default Titles;\r\n","import React from \"react\";\r\n\r\nconst CountryInput = props => (\r\n  <form className=\"text-left\" onSubmit={props.getHolidays}>\r\n    <input type=\"text\" name=\"country\" placeholder=\"Country code...\" />\r\n    <button>Find Holiday</button>\r\n  </form>\r\n);\r\n\r\nexport default CountryInput;\r\n","import React from \"react\";\r\n\r\nconst HolidayButton = props => (\r\n  <div className=\"text-center\">\r\n    <button onClick=\"\">Next Holiday</button>\r\n  </div>\r\n);\r\n\r\nexport default HolidayButton;\r\n","import React from \"react\";\r\nimport HolidayButton from \"./HolidayButton\";\r\n\r\nconst Holiday = props => (\r\n  <div className=\"holiday__info text-left\">\r\n    {props.holidayName && (\r\n      <p className=\"holiday__key\">\r\n        Name:\r\n        <span className=\"holiday__value\"> {props.holidayName} </span>\r\n      </p>\r\n    )}\r\n    {props.holidayDescription && (\r\n      <p className=\"holiday__key\">\r\n        Description:\r\n        <span className=\"holiday__value\"> {props.holidayDescription}</span>\r\n      </p>\r\n    )}\r\n    {props.date && (\r\n      <p className=\"holiday__key\">\r\n        Date:\r\n        <span className=\"holiday__value\"> {props.date}</span>\r\n      </p>\r\n    )}\r\n    {props.daysUntil && (\r\n      <React.Fragment>\r\n        <p className=\"holiday__key\">\r\n          Countdown:\r\n          <span className=\"holiday__value\">\r\n            {\" \"}\r\n            {Math.ceil(props.daysUntil)} days\r\n          </span>\r\n        </p>\r\n        <HolidayButton getNextHoliday={props.getNextHoliday} />\r\n      </React.Fragment>\r\n    )}\r\n    {props.error && <p className=\"holiday__key\">{props.error}</p>}\r\n  </div>\r\n);\r\n\r\nexport default Holiday;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Titles from \"./components/Titles\";\nimport CountryInput from \"./components/CountryInput\";\nimport Holiday from \"./components/Holiday\";\n\nvar API_KEY = process.env.REACT_APP_API_KEY;\n\nclass App extends Component {\n  state = {\n    holidays: undefined,\n    holidayName: undefined,\n    holidayDescription: undefined,\n    date: undefined,\n    daysUntil: undefined,\n    error: undefined\n  };\n  getHolidays = async e => {\n    e.preventDefault();\n    console.log(\"Getting weather\");\n    var country = e.target.elements.country.value;\n    if (!country) {\n      country = \"NZ\";\n    }\n    const api_call = await fetch(\n      `https://calendarific.com/api/v2/holidays?country=${country}&year=2019&api_key=${API_KEY}`\n    );\n    var data = await api_call.json();\n    console.log(data.response.holidays);\n    if (data.response.length !== 0) {\n      this.setState({ holidays: data.response.holidays });\n      this.getNextHoliday(new Date());\n    } else {\n      this.setState({\n        holidayName: undefined,\n        holidayDescription: undefined,\n        daysUntil: undefined,\n        error: \"Please enter a valid country code\"\n      });\n    }\n  };\n\n  getNextHoliday(todaysDate) {\n    var holidays = this.state.holidays;\n    var nextHoliday = holidays[0];\n\n    var i;\n    for (i = 1; i < holidays.length; i++) {\n      var holidayDate = new Date(holidays[i].date.iso);\n      if (\n        todaysDate < holidayDate &&\n        todaysDate > new Date(nextHoliday.date.iso)\n      ) {\n        nextHoliday = holidays[i];\n      } else if (todaysDate < holidayDate) {\n        var differenceInMilliseconds = Math.abs(todaysDate - holidayDate);\n        if (\n          differenceInMilliseconds <\n          Math.abs(todaysDate - new Date(nextHoliday.date.iso))\n        ) {\n          nextHoliday = holidays[i];\n        }\n      }\n    }\n    this.setState({\n      holidayName: nextHoliday.name,\n      holidayDescription: nextHoliday.description,\n      daysUntil:\n        (new Date(nextHoliday.date.iso) - todaysDate) / (1000 * 60 * 60 * 24),\n      date: nextHoliday.date.iso,\n      error: \"\"\n    });\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <div className=\"main\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-xs-5 col-lg-6 title-container\">\n                  <Titles />\n                </div>\n                <div className=\"col-xs-7 col-lg-6 form-container\">\n                  <CountryInput getHolidays={this.getHolidays} />\n                  <Holiday\n                    holidayName={this.state.holidayName}\n                    holidayDescription={this.state.holidayDescription}\n                    daysUntil={this.state.daysUntil}\n                    date={this.state.date}\n                    error={this.state.error}\n                    getNextHoliday={this.getNextHoliday}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}